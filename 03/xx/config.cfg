[General]
experiment_name   = Iris_Evaluate
#task             = cross_validate, 
task              = evaluate
#task             = predict 
#task             = train
#task             = learning_curve

[Input]

train_directory  = train
test_directory   = test
featuresets      = [["example_iris_features"]]
featureset_names = ["example_iris"]
suffix           = .jsonlines

learners = [
	"AdaBoostClassifier",
	"DummyClassifier",
	"DecisionTreeClassifier",
	"GradientBoostingClassifier",
	"KNeighborsClassifier",
	"LinearSVC",
	"LogisticRegression",
	"MLPClassifier",
	"MultinomialNB",
	"RandomForestClassifier",
	"RidgeClassifier",
	"SGDClassifier",
	"SVC"]


#learners = [
#	"AdaBoostRegressor",
#	"BayesianRidge",
#	"DecisionTreeRegressor",
#	"DummyRegressor",
#	"ElasticNet",
#	"GradientBoostingRegressor",
#	"HuberRegressor",
#	"KNeighborsRegressor",
#	"Lars",
#	"Lasso",
#	"LinearRegression",
#	"LinearSVR",
#	"MLPRegressor",
#	"RandomForestRegressor",
#	"RANSACRegressor",
#	"Ridge",
#	"SGDRegressor",
#	"SVR",
#	"TheilSenRegressor"
#]

[Tuning]
grid_search = true
objectives = [
	"accuracy",
	"average_precision",
	"balanced_accuracy",
	"f1",
	"f1_score_micro",
	"f1_score_macro",
	"f1_score_weighted",
	"f1_score_least_frequent",
	"kendall_tau",
	"linear_weighted_kappa",
	"lwk_off_by_one",
	"neg_log_loss",
	"pearson",
	"precision",
	"quadratic_weighted_kappa",
	"qwk_off_by_one",
	"recall",
	"roc_auc",
	"spearman",
	"unweighted_kappa",
	"uwk_off_by_one"]


#objectives = [
#	"explained_variance",
#	"kendall_tau",
#	"linear_weighted_kappa",
#	"lwk_off_by_one",
#	"max_error",
#	"neg_mean_absolute_error",
#	"neg_mean_squared_error",
#	"pearson",
#	"quadratic_weighted_kappa",
#	"qwk_off_by_one",
#	"r2",
#	"spearman",
#	"unweighted_kappa",
#	"uwk_off_by_one"
#]

[Output]
results     = output
log         = output
predictions = output
















